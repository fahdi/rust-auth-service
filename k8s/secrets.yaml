apiVersion: v1
kind: Secret
metadata:
  name: auth-service-secrets
  namespace: auth-service
  labels:
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # JWT Secret (should be base64 encoded in production)
  JWT_SECRET: "your-super-secure-jwt-secret-key-change-in-production"
  
  # Database URLs (replace with actual values)
  MONGODB_URL: "mongodb://auth-mongodb:27017/auth_service"
  POSTGRESQL_URL: "postgresql://auth_user:auth_password@auth-postgresql:5432/auth_service"
  MYSQL_URL: "mysql://auth_user:auth_password@auth-mysql:3306/auth_service"
  
  # Redis URL
  REDIS_URL: "redis://auth-redis:6379"
  
  # Email service API keys (replace with actual values)
  BREVO_API_KEY: "your-brevo-api-key"
  SENDGRID_API_KEY: "your-sendgrid-api-key"
  
  # SMTP configuration
  SMTP_HOST: "smtp.gmail.com"
  SMTP_USERNAME: "your-smtp-username"
  SMTP_PASSWORD: "your-smtp-password"
  
  # Database credentials
  DB_USERNAME: "auth_user"
  DB_PASSWORD: "auth_password"
  
  # Admin credentials
  ADMIN_EMAIL: "admin@auth-service.com"
  ADMIN_PASSWORD: "admin-password-change-in-production"
---
apiVersion: v1
kind: Secret
metadata:
  name: auth-service-tls
  namespace: auth-service
  labels:
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
stringData:
  # TLS certificate (replace with actual certificate)
  tls.crt: |
    -----BEGIN CERTIFICATE-----
    # Your TLS certificate here
    -----END CERTIFICATE-----
  # TLS private key (replace with actual private key)
  tls.key: |
    -----BEGIN PRIVATE KEY-----
    # Your TLS private key here
    -----END PRIVATE KEY-----
---
# External secret operator configuration (if using external secret management)
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: auth-service-secret-store
  namespace: auth-service
spec:
  provider:
    # Example for AWS Secrets Manager
    aws:
      service: SecretsManager
      region: us-east-1
      auth:
        secretRef:
          accessKeyID:
            name: awssm-secret
            key: access-key
          secretAccessKey:
            name: awssm-secret
            key: secret-access-key
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: auth-service-external-secrets
  namespace: auth-service
spec:
  secretStoreRef:
    name: auth-service-secret-store
    kind: SecretStore
  target:
    name: auth-service-external-secrets
    creationPolicy: Owner
  data:
  - secretKey: JWT_SECRET
    remoteRef:
      key: auth-service/jwt-secret
  - secretKey: MONGODB_URL
    remoteRef:
      key: auth-service/mongodb-url
  - secretKey: BREVO_API_KEY
    remoteRef:
      key: auth-service/brevo-api-key