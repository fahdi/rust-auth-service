# üîê Environment Variables for Rust Auth Service
# Copy this file to .env and fill in your actual values
# NEVER commit .env files to version control!

# =============================================================================
# üö® REQUIRED PRODUCTION VARIABLES (Must be set)
# =============================================================================

# JWT Secret (256+ bit random string)
# Generate with: openssl rand -hex 32
JWT_SECRET=CHANGE_ME_GENERATE_WITH_OPENSSL_RAND_HEX_32

# Database Connection
# Choose one based on your database type:
DATABASE_URL=CHANGE_ME_mongodb://username:password@localhost:27017/auth_service?authSource=admin
# DATABASE_URL=postgresql://username:password@localhost:5432/auth_service
# DATABASE_URL=mysql://username:password@localhost:3306/auth_service

# Redis Cache (Optional - will fall back to memory cache if not set)
REDIS_URL=CHANGE_ME_redis://username:password@localhost:6379

# =============================================================================
# üìß EMAIL PROVIDER CONFIGURATION (Choose one)
# =============================================================================

# Brevo (formerly Sendinblue) - Recommended for production
# BREVO_API_KEY=CHANGE_ME_your-brevo-api-key

# SendGrid - Alternative email provider
# SENDGRID_API_KEY=CHANGE_ME_your-sendgrid-api-key

# SMTP - For development or custom email servers
# SMTP_HOST=localhost
# SMTP_PORT=1025
# SMTP_USERNAME=
# SMTP_PASSWORD=
# SMTP_USE_TLS=false

# =============================================================================
# üîß OPTIONAL CONFIGURATION OVERRIDES
# =============================================================================

# Server Configuration
# HOST=0.0.0.0
# PORT=8080
# WORKERS=4

# Security Settings
# BCRYPT_ROUNDS=12
# JWT_EXPIRATION_DAYS=7
# REQUIRE_EMAIL_VERIFICATION=true

# Rate Limiting
# RATE_LIMIT_ENABLED=true
# RATE_LIMIT_REQUESTS_PER_MINUTE=60
# RATE_LIMIT_BURST_SIZE=10

# Monitoring
# PROMETHEUS_ENABLED=true
# METRICS_PORT=9090
# LOG_LEVEL=info

# =============================================================================
# üöÄ DEVELOPMENT SHORTCUTS
# =============================================================================

# Quick development setup (insecure - not for production)
# Uncomment for local development only:

# DEV_MODE=true
# JWT_SECRET=dev-secret-change-for-production
# DATABASE_URL=mongodb://localhost:27017/auth_service_dev
# REDIS_URL=redis://localhost:6379
# EMAIL_PROVIDER=smtp
# SMTP_HOST=localhost
# SMTP_PORT=1025
# LOG_LEVEL=debug

# =============================================================================
# üìù GENERATION COMMANDS
# =============================================================================

# Generate secure JWT secret:
# openssl rand -hex 32

# Generate secure database password:
# openssl rand -base64 32

# Generate secure Redis password:
# openssl rand -base64 24

# =============================================================================
# üîí SECURITY NOTES
# =============================================================================

# 1. Never use default or example passwords in production
# 2. Use different secrets for each environment (dev/staging/prod)
# 3. Rotate secrets regularly (every 90 days recommended)
# 4. Store secrets in secure vaults (Azure Key Vault, AWS Secrets Manager, etc.)
# 5. Use strong, randomly generated passwords (20+ characters)
# 6. Enable two-factor authentication on all accounts
# 7. Regularly audit access to secrets and rotate if compromised