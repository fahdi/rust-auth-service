# Multi-stage Dockerfile for testing
FROM rust:1.70 as builder

# Install required system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy dependency files
COPY Cargo.toml Cargo.lock ./

# Create a dummy main.rs to cache dependencies
RUN mkdir src && echo "fn main() {}" > src/main.rs

# Build dependencies (this will be cached)
RUN cargo build --release
RUN cargo build # Debug build for tests
RUN rm src/main.rs

# Copy source code
COPY . .

# Build the actual application
RUN cargo build --release
RUN cargo build

# Final test image
FROM rust:1.70

# Install runtime dependencies and database clients for testing
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    ca-certificates \
    postgresql-client \
    mysql-client \
    mongodb-clients \
    redis-tools \
    curl \
    jq \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy built artifacts
COPY --from=builder /app/target ./target
COPY --from=builder /app/Cargo.toml /app/Cargo.lock ./
COPY . .

# Set environment variables for testing
ENV RUST_BACKTRACE=1
ENV RUST_LOG=debug

# Default command (can be overridden)
CMD ["cargo", "test"]